// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: deflateinfo.proto

#include "deflateinfo.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_deflateinfo_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_deflateinfo_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Backref;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_deflateinfo_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CompressedBlock_DistCodelenEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_deflateinfo_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CompressedBlock_LenlitCodelenEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_deflateinfo_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Literal;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_deflateinfo_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_OffsetBackref;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_deflateinfo_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_UncompressedBlock;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_deflateinfo_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_DEFLATEBlock;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_deflateinfo_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_UnderlyingBlock;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_deflateinfo_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_CompressedBlock;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_deflateinfo_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_DeflateSym;
}  // namespace protobuf_deflateinfo_2eproto
class LiteralDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Literal>
      _instance;
} _Literal_default_instance_;
class BackrefDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Backref>
      _instance;
} _Backref_default_instance_;
class OffsetBackrefDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OffsetBackref>
      _instance;
} _OffsetBackref_default_instance_;
class DeflateSymDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeflateSym>
      _instance;
  const ::Literal* lit_;
  const ::Backref* backref_;
  const ::OffsetBackref* offset_;
} _DeflateSym_default_instance_;
class UncompressedBlockDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UncompressedBlock>
      _instance;
} _UncompressedBlock_default_instance_;
class CompressedBlock_LenlitCodelenEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CompressedBlock_LenlitCodelenEntry_DoNotUse>
      _instance;
} _CompressedBlock_LenlitCodelenEntry_DoNotUse_default_instance_;
class CompressedBlock_DistCodelenEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CompressedBlock_DistCodelenEntry_DoNotUse>
      _instance;
} _CompressedBlock_DistCodelenEntry_DoNotUse_default_instance_;
class CompressedBlockDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CompressedBlock>
      _instance;
} _CompressedBlock_default_instance_;
class UnderlyingBlockDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UnderlyingBlock>
      _instance;
  const ::UncompressedBlock* raw_;
  const ::CompressedBlock* block_;
} _UnderlyingBlock_default_instance_;
class DEFLATEBlockDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DEFLATEBlock>
      _instance;
} _DEFLATEBlock_default_instance_;
class DEFLATEStreamDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DEFLATEStream>
      _instance;
} _DEFLATEStream_default_instance_;
namespace protobuf_deflateinfo_2eproto {
static void InitDefaultsLiteral() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Literal_default_instance_;
    new (ptr) ::Literal();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Literal::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Literal =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLiteral}, {}};

static void InitDefaultsBackref() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Backref_default_instance_;
    new (ptr) ::Backref();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Backref::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Backref =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBackref}, {}};

static void InitDefaultsOffsetBackref() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_OffsetBackref_default_instance_;
    new (ptr) ::OffsetBackref();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OffsetBackref::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OffsetBackref =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOffsetBackref}, {}};

static void InitDefaultsDeflateSym() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_DeflateSym_default_instance_;
    new (ptr) ::DeflateSym();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DeflateSym::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_DeflateSym =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsDeflateSym}, {
      &protobuf_deflateinfo_2eproto::scc_info_Literal.base,
      &protobuf_deflateinfo_2eproto::scc_info_Backref.base,
      &protobuf_deflateinfo_2eproto::scc_info_OffsetBackref.base,}};

static void InitDefaultsUncompressedBlock() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_UncompressedBlock_default_instance_;
    new (ptr) ::UncompressedBlock();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::UncompressedBlock::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UncompressedBlock =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUncompressedBlock}, {}};

static void InitDefaultsCompressedBlock_LenlitCodelenEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CompressedBlock_LenlitCodelenEntry_DoNotUse_default_instance_;
    new (ptr) ::CompressedBlock_LenlitCodelenEntry_DoNotUse();
  }
  ::CompressedBlock_LenlitCodelenEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CompressedBlock_LenlitCodelenEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCompressedBlock_LenlitCodelenEntry_DoNotUse}, {}};

static void InitDefaultsCompressedBlock_DistCodelenEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CompressedBlock_DistCodelenEntry_DoNotUse_default_instance_;
    new (ptr) ::CompressedBlock_DistCodelenEntry_DoNotUse();
  }
  ::CompressedBlock_DistCodelenEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CompressedBlock_DistCodelenEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCompressedBlock_DistCodelenEntry_DoNotUse}, {}};

static void InitDefaultsCompressedBlock() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_CompressedBlock_default_instance_;
    new (ptr) ::CompressedBlock();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CompressedBlock::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_CompressedBlock =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsCompressedBlock}, {
      &protobuf_deflateinfo_2eproto::scc_info_CompressedBlock_LenlitCodelenEntry_DoNotUse.base,
      &protobuf_deflateinfo_2eproto::scc_info_CompressedBlock_DistCodelenEntry_DoNotUse.base,
      &protobuf_deflateinfo_2eproto::scc_info_DeflateSym.base,}};

static void InitDefaultsUnderlyingBlock() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_UnderlyingBlock_default_instance_;
    new (ptr) ::UnderlyingBlock();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::UnderlyingBlock::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_UnderlyingBlock =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsUnderlyingBlock}, {
      &protobuf_deflateinfo_2eproto::scc_info_UncompressedBlock.base,
      &protobuf_deflateinfo_2eproto::scc_info_CompressedBlock.base,}};

static void InitDefaultsDEFLATEBlock() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_DEFLATEBlock_default_instance_;
    new (ptr) ::DEFLATEBlock();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DEFLATEBlock::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DEFLATEBlock =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDEFLATEBlock}, {
      &protobuf_deflateinfo_2eproto::scc_info_UnderlyingBlock.base,}};

static void InitDefaultsDEFLATEStream() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_DEFLATEStream_default_instance_;
    new (ptr) ::DEFLATEStream();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DEFLATEStream::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DEFLATEStream =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDEFLATEStream}, {
      &protobuf_deflateinfo_2eproto::scc_info_DEFLATEBlock.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Literal.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Backref.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OffsetBackref.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeflateSym.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UncompressedBlock.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CompressedBlock_LenlitCodelenEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CompressedBlock_DistCodelenEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CompressedBlock.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UnderlyingBlock.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DEFLATEBlock.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DEFLATEStream.base);
}

::google::protobuf::Metadata file_level_metadata[11];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Literal, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Literal, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Backref, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Backref, length_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Backref, distance_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OffsetBackref, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OffsetBackref, offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OffsetBackref, length_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OffsetBackref, distance_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DeflateSym, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DeflateSym, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::DeflateSymDefaultTypeInternal, lit_),
  offsetof(::DeflateSymDefaultTypeInternal, backref_),
  offsetof(::DeflateSymDefaultTypeInternal, offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DeflateSym, sym_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UncompressedBlock, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UncompressedBlock, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CompressedBlock_LenlitCodelenEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CompressedBlock_LenlitCodelenEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CompressedBlock_LenlitCodelenEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CompressedBlock_LenlitCodelenEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CompressedBlock_DistCodelenEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CompressedBlock_DistCodelenEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CompressedBlock_DistCodelenEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CompressedBlock_DistCodelenEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CompressedBlock, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CompressedBlock, lenlit_codelen_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CompressedBlock, dist_codelen_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CompressedBlock, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UnderlyingBlock, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UnderlyingBlock, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::UnderlyingBlockDefaultTypeInternal, raw_),
  offsetof(::UnderlyingBlockDefaultTypeInternal, block_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UnderlyingBlock, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DEFLATEBlock, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DEFLATEBlock, final_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DEFLATEBlock, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DEFLATEStream, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DEFLATEStream, blocks_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::Literal)},
  { 6, -1, sizeof(::Backref)},
  { 13, -1, sizeof(::OffsetBackref)},
  { 21, -1, sizeof(::DeflateSym)},
  { 30, -1, sizeof(::UncompressedBlock)},
  { 36, 43, sizeof(::CompressedBlock_LenlitCodelenEntry_DoNotUse)},
  { 45, 52, sizeof(::CompressedBlock_DistCodelenEntry_DoNotUse)},
  { 54, -1, sizeof(::CompressedBlock)},
  { 62, -1, sizeof(::UnderlyingBlock)},
  { 70, -1, sizeof(::DEFLATEBlock)},
  { 77, -1, sizeof(::DEFLATEStream)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Literal_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Backref_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_OffsetBackref_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_DeflateSym_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_UncompressedBlock_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CompressedBlock_LenlitCodelenEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CompressedBlock_DistCodelenEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CompressedBlock_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_UnderlyingBlock_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_DEFLATEBlock_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_DEFLATEStream_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "deflateinfo.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 11);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\021deflateinfo.proto\"\030\n\007Literal\022\r\n\005value\030"
      "\001 \001(\r\"+\n\007Backref\022\016\n\006length\030\001 \001(\r\022\020\n\010dist"
      "ance\030\002 \001(\r\"A\n\rOffsetBackref\022\016\n\006offset\030\001 "
      "\001(\r\022\016\n\006length\030\002 \001(\r\022\020\n\010distance\030\003 \001(\r\"k\n"
      "\nDeflateSym\022\027\n\003lit\030\001 \001(\0132\010.LiteralH\000\022\033\n\007"
      "backref\030\002 \001(\0132\010.BackrefH\000\022 \n\006offset\030\003 \001("
      "\0132\016.OffsetBackrefH\000B\005\n\003sym\"!\n\021Uncompress"
      "edBlock\022\014\n\004data\030\001 \001(\014\"\214\002\n\017CompressedBloc"
      "k\022;\n\016lenlit_codelen\030\003 \003(\0132#.CompressedBl"
      "ock.LenlitCodelenEntry\0227\n\014dist_codelen\030\004"
      " \003(\0132!.CompressedBlock.DistCodelenEntry\022"
      "\031\n\004data\030\001 \003(\0132\013.DeflateSym\0324\n\022LenlitCode"
      "lenEntry\022\013\n\003key\030\001 \001(\r\022\r\n\005value\030\002 \001(\r:\0028\001"
      "\0322\n\020DistCodelenEntry\022\013\n\003key\030\001 \001(\r\022\r\n\005val"
      "ue\030\002 \001(\r:\0028\001\"_\n\017UnderlyingBlock\022!\n\003raw\030\n"
      " \001(\0132\022.UncompressedBlockH\000\022!\n\005block\030\001 \001("
      "\0132\020.CompressedBlockH\000B\006\n\004data\"=\n\014DEFLATE"
      "Block\022\r\n\005final\030\001 \001(\010\022\036\n\004data\030\002 \001(\0132\020.Und"
      "erlyingBlock\".\n\rDEFLATEStream\022\035\n\006blocks\030"
      "\001 \003(\0132\r.DEFLATEBlockb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 788);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "deflateinfo.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_deflateinfo_2eproto

// ===================================================================

void Literal::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Literal::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Literal::Literal()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_deflateinfo_2eproto::scc_info_Literal.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Literal)
}
Literal::Literal(const Literal& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:Literal)
}

void Literal::SharedCtor() {
  value_ = 0u;
}

Literal::~Literal() {
  // @@protoc_insertion_point(destructor:Literal)
  SharedDtor();
}

void Literal::SharedDtor() {
}

void Literal::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Literal::descriptor() {
  ::protobuf_deflateinfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_deflateinfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Literal& Literal::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_deflateinfo_2eproto::scc_info_Literal.base);
  return *internal_default_instance();
}


void Literal::Clear() {
// @@protoc_insertion_point(message_clear_start:Literal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_ = 0u;
  _internal_metadata_.Clear();
}

bool Literal::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Literal)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Literal)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Literal)
  return false;
#undef DO_
}

void Literal::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Literal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 value = 1;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Literal)
}

::google::protobuf::uint8* Literal::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Literal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 value = 1;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Literal)
  return target;
}

size_t Literal::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Literal)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 value = 1;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Literal::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Literal)
  GOOGLE_DCHECK_NE(&from, this);
  const Literal* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Literal>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Literal)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Literal)
    MergeFrom(*source);
  }
}

void Literal::MergeFrom(const Literal& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Literal)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value() != 0) {
    set_value(from.value());
  }
}

void Literal::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Literal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Literal::CopyFrom(const Literal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Literal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Literal::IsInitialized() const {
  return true;
}

void Literal::Swap(Literal* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Literal::InternalSwap(Literal* other) {
  using std::swap;
  swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Literal::GetMetadata() const {
  protobuf_deflateinfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_deflateinfo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Backref::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Backref::kLengthFieldNumber;
const int Backref::kDistanceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Backref::Backref()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_deflateinfo_2eproto::scc_info_Backref.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Backref)
}
Backref::Backref(const Backref& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&length_, &from.length_,
    static_cast<size_t>(reinterpret_cast<char*>(&distance_) -
    reinterpret_cast<char*>(&length_)) + sizeof(distance_));
  // @@protoc_insertion_point(copy_constructor:Backref)
}

void Backref::SharedCtor() {
  ::memset(&length_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&distance_) -
      reinterpret_cast<char*>(&length_)) + sizeof(distance_));
}

Backref::~Backref() {
  // @@protoc_insertion_point(destructor:Backref)
  SharedDtor();
}

void Backref::SharedDtor() {
}

void Backref::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Backref::descriptor() {
  ::protobuf_deflateinfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_deflateinfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Backref& Backref::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_deflateinfo_2eproto::scc_info_Backref.base);
  return *internal_default_instance();
}


void Backref::Clear() {
// @@protoc_insertion_point(message_clear_start:Backref)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&length_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&distance_) -
      reinterpret_cast<char*>(&length_)) + sizeof(distance_));
  _internal_metadata_.Clear();
}

bool Backref::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Backref)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 length = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 distance = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &distance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Backref)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Backref)
  return false;
#undef DO_
}

void Backref::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Backref)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 length = 1;
  if (this->length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->length(), output);
  }

  // uint32 distance = 2;
  if (this->distance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->distance(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Backref)
}

::google::protobuf::uint8* Backref::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Backref)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 length = 1;
  if (this->length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->length(), target);
  }

  // uint32 distance = 2;
  if (this->distance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->distance(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Backref)
  return target;
}

size_t Backref::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Backref)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 length = 1;
  if (this->length() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->length());
  }

  // uint32 distance = 2;
  if (this->distance() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->distance());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Backref::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Backref)
  GOOGLE_DCHECK_NE(&from, this);
  const Backref* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Backref>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Backref)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Backref)
    MergeFrom(*source);
  }
}

void Backref::MergeFrom(const Backref& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Backref)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.length() != 0) {
    set_length(from.length());
  }
  if (from.distance() != 0) {
    set_distance(from.distance());
  }
}

void Backref::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Backref)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Backref::CopyFrom(const Backref& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Backref)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Backref::IsInitialized() const {
  return true;
}

void Backref::Swap(Backref* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Backref::InternalSwap(Backref* other) {
  using std::swap;
  swap(length_, other->length_);
  swap(distance_, other->distance_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Backref::GetMetadata() const {
  protobuf_deflateinfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_deflateinfo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OffsetBackref::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OffsetBackref::kOffsetFieldNumber;
const int OffsetBackref::kLengthFieldNumber;
const int OffsetBackref::kDistanceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OffsetBackref::OffsetBackref()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_deflateinfo_2eproto::scc_info_OffsetBackref.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:OffsetBackref)
}
OffsetBackref::OffsetBackref(const OffsetBackref& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&offset_, &from.offset_,
    static_cast<size_t>(reinterpret_cast<char*>(&distance_) -
    reinterpret_cast<char*>(&offset_)) + sizeof(distance_));
  // @@protoc_insertion_point(copy_constructor:OffsetBackref)
}

void OffsetBackref::SharedCtor() {
  ::memset(&offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&distance_) -
      reinterpret_cast<char*>(&offset_)) + sizeof(distance_));
}

OffsetBackref::~OffsetBackref() {
  // @@protoc_insertion_point(destructor:OffsetBackref)
  SharedDtor();
}

void OffsetBackref::SharedDtor() {
}

void OffsetBackref::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OffsetBackref::descriptor() {
  ::protobuf_deflateinfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_deflateinfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OffsetBackref& OffsetBackref::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_deflateinfo_2eproto::scc_info_OffsetBackref.base);
  return *internal_default_instance();
}


void OffsetBackref::Clear() {
// @@protoc_insertion_point(message_clear_start:OffsetBackref)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&distance_) -
      reinterpret_cast<char*>(&offset_)) + sizeof(distance_));
  _internal_metadata_.Clear();
}

bool OffsetBackref::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OffsetBackref)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 offset = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 length = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 distance = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &distance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OffsetBackref)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OffsetBackref)
  return false;
#undef DO_
}

void OffsetBackref::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OffsetBackref)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 offset = 1;
  if (this->offset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->offset(), output);
  }

  // uint32 length = 2;
  if (this->length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->length(), output);
  }

  // uint32 distance = 3;
  if (this->distance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->distance(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:OffsetBackref)
}

::google::protobuf::uint8* OffsetBackref::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:OffsetBackref)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 offset = 1;
  if (this->offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->offset(), target);
  }

  // uint32 length = 2;
  if (this->length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->length(), target);
  }

  // uint32 distance = 3;
  if (this->distance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->distance(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OffsetBackref)
  return target;
}

size_t OffsetBackref::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OffsetBackref)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 offset = 1;
  if (this->offset() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->offset());
  }

  // uint32 length = 2;
  if (this->length() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->length());
  }

  // uint32 distance = 3;
  if (this->distance() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->distance());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OffsetBackref::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OffsetBackref)
  GOOGLE_DCHECK_NE(&from, this);
  const OffsetBackref* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OffsetBackref>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OffsetBackref)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OffsetBackref)
    MergeFrom(*source);
  }
}

void OffsetBackref::MergeFrom(const OffsetBackref& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OffsetBackref)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.offset() != 0) {
    set_offset(from.offset());
  }
  if (from.length() != 0) {
    set_length(from.length());
  }
  if (from.distance() != 0) {
    set_distance(from.distance());
  }
}

void OffsetBackref::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OffsetBackref)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OffsetBackref::CopyFrom(const OffsetBackref& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OffsetBackref)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OffsetBackref::IsInitialized() const {
  return true;
}

void OffsetBackref::Swap(OffsetBackref* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OffsetBackref::InternalSwap(OffsetBackref* other) {
  using std::swap;
  swap(offset_, other->offset_);
  swap(length_, other->length_);
  swap(distance_, other->distance_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OffsetBackref::GetMetadata() const {
  protobuf_deflateinfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_deflateinfo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeflateSym::InitAsDefaultInstance() {
  ::_DeflateSym_default_instance_.lit_ = const_cast< ::Literal*>(
      ::Literal::internal_default_instance());
  ::_DeflateSym_default_instance_.backref_ = const_cast< ::Backref*>(
      ::Backref::internal_default_instance());
  ::_DeflateSym_default_instance_.offset_ = const_cast< ::OffsetBackref*>(
      ::OffsetBackref::internal_default_instance());
}
void DeflateSym::set_allocated_lit(::Literal* lit) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_sym();
  if (lit) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      lit = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, lit, submessage_arena);
    }
    set_has_lit();
    sym_.lit_ = lit;
  }
  // @@protoc_insertion_point(field_set_allocated:DeflateSym.lit)
}
void DeflateSym::set_allocated_backref(::Backref* backref) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_sym();
  if (backref) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      backref = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, backref, submessage_arena);
    }
    set_has_backref();
    sym_.backref_ = backref;
  }
  // @@protoc_insertion_point(field_set_allocated:DeflateSym.backref)
}
void DeflateSym::set_allocated_offset(::OffsetBackref* offset) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_sym();
  if (offset) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      offset = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, offset, submessage_arena);
    }
    set_has_offset();
    sym_.offset_ = offset;
  }
  // @@protoc_insertion_point(field_set_allocated:DeflateSym.offset)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeflateSym::kLitFieldNumber;
const int DeflateSym::kBackrefFieldNumber;
const int DeflateSym::kOffsetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeflateSym::DeflateSym()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_deflateinfo_2eproto::scc_info_DeflateSym.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:DeflateSym)
}
DeflateSym::DeflateSym(const DeflateSym& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_sym();
  switch (from.sym_case()) {
    case kLit: {
      mutable_lit()->::Literal::MergeFrom(from.lit());
      break;
    }
    case kBackref: {
      mutable_backref()->::Backref::MergeFrom(from.backref());
      break;
    }
    case kOffset: {
      mutable_offset()->::OffsetBackref::MergeFrom(from.offset());
      break;
    }
    case SYM_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:DeflateSym)
}

void DeflateSym::SharedCtor() {
  clear_has_sym();
}

DeflateSym::~DeflateSym() {
  // @@protoc_insertion_point(destructor:DeflateSym)
  SharedDtor();
}

void DeflateSym::SharedDtor() {
  if (has_sym()) {
    clear_sym();
  }
}

void DeflateSym::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeflateSym::descriptor() {
  ::protobuf_deflateinfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_deflateinfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeflateSym& DeflateSym::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_deflateinfo_2eproto::scc_info_DeflateSym.base);
  return *internal_default_instance();
}


void DeflateSym::clear_sym() {
// @@protoc_insertion_point(one_of_clear_start:DeflateSym)
  switch (sym_case()) {
    case kLit: {
      delete sym_.lit_;
      break;
    }
    case kBackref: {
      delete sym_.backref_;
      break;
    }
    case kOffset: {
      delete sym_.offset_;
      break;
    }
    case SYM_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = SYM_NOT_SET;
}


void DeflateSym::Clear() {
// @@protoc_insertion_point(message_clear_start:DeflateSym)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_sym();
  _internal_metadata_.Clear();
}

bool DeflateSym::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DeflateSym)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Literal lit = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_lit()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Backref backref = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_backref()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .OffsetBackref offset = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_offset()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DeflateSym)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DeflateSym)
  return false;
#undef DO_
}

void DeflateSym::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DeflateSym)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Literal lit = 1;
  if (has_lit()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_lit(), output);
  }

  // .Backref backref = 2;
  if (has_backref()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_backref(), output);
  }

  // .OffsetBackref offset = 3;
  if (has_offset()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_offset(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DeflateSym)
}

::google::protobuf::uint8* DeflateSym::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DeflateSym)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Literal lit = 1;
  if (has_lit()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_lit(), deterministic, target);
  }

  // .Backref backref = 2;
  if (has_backref()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_backref(), deterministic, target);
  }

  // .OffsetBackref offset = 3;
  if (has_offset()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_offset(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DeflateSym)
  return target;
}

size_t DeflateSym::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DeflateSym)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (sym_case()) {
    // .Literal lit = 1;
    case kLit: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *sym_.lit_);
      break;
    }
    // .Backref backref = 2;
    case kBackref: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *sym_.backref_);
      break;
    }
    // .OffsetBackref offset = 3;
    case kOffset: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *sym_.offset_);
      break;
    }
    case SYM_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeflateSym::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DeflateSym)
  GOOGLE_DCHECK_NE(&from, this);
  const DeflateSym* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeflateSym>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DeflateSym)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DeflateSym)
    MergeFrom(*source);
  }
}

void DeflateSym::MergeFrom(const DeflateSym& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DeflateSym)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.sym_case()) {
    case kLit: {
      mutable_lit()->::Literal::MergeFrom(from.lit());
      break;
    }
    case kBackref: {
      mutable_backref()->::Backref::MergeFrom(from.backref());
      break;
    }
    case kOffset: {
      mutable_offset()->::OffsetBackref::MergeFrom(from.offset());
      break;
    }
    case SYM_NOT_SET: {
      break;
    }
  }
}

void DeflateSym::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DeflateSym)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeflateSym::CopyFrom(const DeflateSym& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DeflateSym)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeflateSym::IsInitialized() const {
  return true;
}

void DeflateSym::Swap(DeflateSym* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeflateSym::InternalSwap(DeflateSym* other) {
  using std::swap;
  swap(sym_, other->sym_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeflateSym::GetMetadata() const {
  protobuf_deflateinfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_deflateinfo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UncompressedBlock::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UncompressedBlock::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UncompressedBlock::UncompressedBlock()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_deflateinfo_2eproto::scc_info_UncompressedBlock.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:UncompressedBlock)
}
UncompressedBlock::UncompressedBlock(const UncompressedBlock& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  // @@protoc_insertion_point(copy_constructor:UncompressedBlock)
}

void UncompressedBlock::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

UncompressedBlock::~UncompressedBlock() {
  // @@protoc_insertion_point(destructor:UncompressedBlock)
  SharedDtor();
}

void UncompressedBlock::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UncompressedBlock::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UncompressedBlock::descriptor() {
  ::protobuf_deflateinfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_deflateinfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UncompressedBlock& UncompressedBlock::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_deflateinfo_2eproto::scc_info_UncompressedBlock.base);
  return *internal_default_instance();
}


void UncompressedBlock::Clear() {
// @@protoc_insertion_point(message_clear_start:UncompressedBlock)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool UncompressedBlock::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UncompressedBlock)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UncompressedBlock)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UncompressedBlock)
  return false;
#undef DO_
}

void UncompressedBlock::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UncompressedBlock)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data = 1;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:UncompressedBlock)
}

::google::protobuf::uint8* UncompressedBlock::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UncompressedBlock)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data = 1;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UncompressedBlock)
  return target;
}

size_t UncompressedBlock::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UncompressedBlock)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes data = 1;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UncompressedBlock::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UncompressedBlock)
  GOOGLE_DCHECK_NE(&from, this);
  const UncompressedBlock* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UncompressedBlock>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UncompressedBlock)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UncompressedBlock)
    MergeFrom(*source);
  }
}

void UncompressedBlock::MergeFrom(const UncompressedBlock& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UncompressedBlock)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void UncompressedBlock::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UncompressedBlock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UncompressedBlock::CopyFrom(const UncompressedBlock& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UncompressedBlock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UncompressedBlock::IsInitialized() const {
  return true;
}

void UncompressedBlock::Swap(UncompressedBlock* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UncompressedBlock::InternalSwap(UncompressedBlock* other) {
  using std::swap;
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UncompressedBlock::GetMetadata() const {
  protobuf_deflateinfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_deflateinfo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

CompressedBlock_LenlitCodelenEntry_DoNotUse::CompressedBlock_LenlitCodelenEntry_DoNotUse() {}
CompressedBlock_LenlitCodelenEntry_DoNotUse::CompressedBlock_LenlitCodelenEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void CompressedBlock_LenlitCodelenEntry_DoNotUse::MergeFrom(const CompressedBlock_LenlitCodelenEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata CompressedBlock_LenlitCodelenEntry_DoNotUse::GetMetadata() const {
  ::protobuf_deflateinfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_deflateinfo_2eproto::file_level_metadata[5];
}
void CompressedBlock_LenlitCodelenEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

CompressedBlock_DistCodelenEntry_DoNotUse::CompressedBlock_DistCodelenEntry_DoNotUse() {}
CompressedBlock_DistCodelenEntry_DoNotUse::CompressedBlock_DistCodelenEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void CompressedBlock_DistCodelenEntry_DoNotUse::MergeFrom(const CompressedBlock_DistCodelenEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata CompressedBlock_DistCodelenEntry_DoNotUse::GetMetadata() const {
  ::protobuf_deflateinfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_deflateinfo_2eproto::file_level_metadata[6];
}
void CompressedBlock_DistCodelenEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void CompressedBlock::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CompressedBlock::kLenlitCodelenFieldNumber;
const int CompressedBlock::kDistCodelenFieldNumber;
const int CompressedBlock::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CompressedBlock::CompressedBlock()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_deflateinfo_2eproto::scc_info_CompressedBlock.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CompressedBlock)
}
CompressedBlock::CompressedBlock(const CompressedBlock& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      data_(from.data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  lenlit_codelen_.MergeFrom(from.lenlit_codelen_);
  dist_codelen_.MergeFrom(from.dist_codelen_);
  // @@protoc_insertion_point(copy_constructor:CompressedBlock)
}

void CompressedBlock::SharedCtor() {
}

CompressedBlock::~CompressedBlock() {
  // @@protoc_insertion_point(destructor:CompressedBlock)
  SharedDtor();
}

void CompressedBlock::SharedDtor() {
}

void CompressedBlock::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CompressedBlock::descriptor() {
  ::protobuf_deflateinfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_deflateinfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CompressedBlock& CompressedBlock::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_deflateinfo_2eproto::scc_info_CompressedBlock.base);
  return *internal_default_instance();
}


void CompressedBlock::Clear() {
// @@protoc_insertion_point(message_clear_start:CompressedBlock)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  lenlit_codelen_.Clear();
  dist_codelen_.Clear();
  _internal_metadata_.Clear();
}

bool CompressedBlock::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CompressedBlock)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .DeflateSym data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, uint32> lenlit_codelen = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          CompressedBlock_LenlitCodelenEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              CompressedBlock_LenlitCodelenEntry_DoNotUse,
              ::google::protobuf::uint32, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 > > parser(&lenlit_codelen_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, uint32> dist_codelen = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          CompressedBlock_DistCodelenEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              CompressedBlock_DistCodelenEntry_DoNotUse,
              ::google::protobuf::uint32, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 > > parser(&dist_codelen_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CompressedBlock)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CompressedBlock)
  return false;
#undef DO_
}

void CompressedBlock::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CompressedBlock)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .DeflateSym data = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->data_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->data(static_cast<int>(i)),
      output);
  }

  // map<uint32, uint32> lenlit_codelen = 3;
  if (!this->lenlit_codelen().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->lenlit_codelen().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->lenlit_codelen().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->lenlit_codelen().begin();
          it != this->lenlit_codelen().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<CompressedBlock_LenlitCodelenEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(lenlit_codelen_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
      }
    } else {
      ::std::unique_ptr<CompressedBlock_LenlitCodelenEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->lenlit_codelen().begin();
          it != this->lenlit_codelen().end(); ++it) {
        entry.reset(lenlit_codelen_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
      }
    }
  }

  // map<uint32, uint32> dist_codelen = 4;
  if (!this->dist_codelen().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->dist_codelen().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->dist_codelen().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->dist_codelen().begin();
          it != this->dist_codelen().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<CompressedBlock_DistCodelenEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(dist_codelen_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
      }
    } else {
      ::std::unique_ptr<CompressedBlock_DistCodelenEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->dist_codelen().begin();
          it != this->dist_codelen().end(); ++it) {
        entry.reset(dist_codelen_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CompressedBlock)
}

::google::protobuf::uint8* CompressedBlock::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CompressedBlock)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .DeflateSym data = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->data_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->data(static_cast<int>(i)), deterministic, target);
  }

  // map<uint32, uint32> lenlit_codelen = 3;
  if (!this->lenlit_codelen().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->lenlit_codelen().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->lenlit_codelen().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->lenlit_codelen().begin();
          it != this->lenlit_codelen().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<CompressedBlock_LenlitCodelenEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(lenlit_codelen_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
      }
    } else {
      ::std::unique_ptr<CompressedBlock_LenlitCodelenEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->lenlit_codelen().begin();
          it != this->lenlit_codelen().end(); ++it) {
        entry.reset(lenlit_codelen_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
      }
    }
  }

  // map<uint32, uint32> dist_codelen = 4;
  if (!this->dist_codelen().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->dist_codelen().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->dist_codelen().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->dist_codelen().begin();
          it != this->dist_codelen().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<CompressedBlock_DistCodelenEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(dist_codelen_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
      }
    } else {
      ::std::unique_ptr<CompressedBlock_DistCodelenEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->dist_codelen().begin();
          it != this->dist_codelen().end(); ++it) {
        entry.reset(dist_codelen_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CompressedBlock)
  return target;
}

size_t CompressedBlock::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CompressedBlock)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .DeflateSym data = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->data_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->data(static_cast<int>(i)));
    }
  }

  // map<uint32, uint32> lenlit_codelen = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->lenlit_codelen_size());
  {
    ::std::unique_ptr<CompressedBlock_LenlitCodelenEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
        it = this->lenlit_codelen().begin();
        it != this->lenlit_codelen().end(); ++it) {
      entry.reset(lenlit_codelen_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<uint32, uint32> dist_codelen = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->dist_codelen_size());
  {
    ::std::unique_ptr<CompressedBlock_DistCodelenEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
        it = this->dist_codelen().begin();
        it != this->dist_codelen().end(); ++it) {
      entry.reset(dist_codelen_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CompressedBlock::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CompressedBlock)
  GOOGLE_DCHECK_NE(&from, this);
  const CompressedBlock* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CompressedBlock>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CompressedBlock)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CompressedBlock)
    MergeFrom(*source);
  }
}

void CompressedBlock::MergeFrom(const CompressedBlock& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CompressedBlock)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
  lenlit_codelen_.MergeFrom(from.lenlit_codelen_);
  dist_codelen_.MergeFrom(from.dist_codelen_);
}

void CompressedBlock::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CompressedBlock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CompressedBlock::CopyFrom(const CompressedBlock& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CompressedBlock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CompressedBlock::IsInitialized() const {
  return true;
}

void CompressedBlock::Swap(CompressedBlock* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CompressedBlock::InternalSwap(CompressedBlock* other) {
  using std::swap;
  CastToBase(&data_)->InternalSwap(CastToBase(&other->data_));
  lenlit_codelen_.Swap(&other->lenlit_codelen_);
  dist_codelen_.Swap(&other->dist_codelen_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CompressedBlock::GetMetadata() const {
  protobuf_deflateinfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_deflateinfo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UnderlyingBlock::InitAsDefaultInstance() {
  ::_UnderlyingBlock_default_instance_.raw_ = const_cast< ::UncompressedBlock*>(
      ::UncompressedBlock::internal_default_instance());
  ::_UnderlyingBlock_default_instance_.block_ = const_cast< ::CompressedBlock*>(
      ::CompressedBlock::internal_default_instance());
}
void UnderlyingBlock::set_allocated_raw(::UncompressedBlock* raw) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_data();
  if (raw) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      raw = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, raw, submessage_arena);
    }
    set_has_raw();
    data_.raw_ = raw;
  }
  // @@protoc_insertion_point(field_set_allocated:UnderlyingBlock.raw)
}
void UnderlyingBlock::set_allocated_block(::CompressedBlock* block) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_data();
  if (block) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      block = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, block, submessage_arena);
    }
    set_has_block();
    data_.block_ = block;
  }
  // @@protoc_insertion_point(field_set_allocated:UnderlyingBlock.block)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnderlyingBlock::kRawFieldNumber;
const int UnderlyingBlock::kBlockFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnderlyingBlock::UnderlyingBlock()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_deflateinfo_2eproto::scc_info_UnderlyingBlock.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:UnderlyingBlock)
}
UnderlyingBlock::UnderlyingBlock(const UnderlyingBlock& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_data();
  switch (from.data_case()) {
    case kRaw: {
      mutable_raw()->::UncompressedBlock::MergeFrom(from.raw());
      break;
    }
    case kBlock: {
      mutable_block()->::CompressedBlock::MergeFrom(from.block());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:UnderlyingBlock)
}

void UnderlyingBlock::SharedCtor() {
  clear_has_data();
}

UnderlyingBlock::~UnderlyingBlock() {
  // @@protoc_insertion_point(destructor:UnderlyingBlock)
  SharedDtor();
}

void UnderlyingBlock::SharedDtor() {
  if (has_data()) {
    clear_data();
  }
}

void UnderlyingBlock::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UnderlyingBlock::descriptor() {
  ::protobuf_deflateinfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_deflateinfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UnderlyingBlock& UnderlyingBlock::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_deflateinfo_2eproto::scc_info_UnderlyingBlock.base);
  return *internal_default_instance();
}


void UnderlyingBlock::clear_data() {
// @@protoc_insertion_point(one_of_clear_start:UnderlyingBlock)
  switch (data_case()) {
    case kRaw: {
      delete data_.raw_;
      break;
    }
    case kBlock: {
      delete data_.block_;
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DATA_NOT_SET;
}


void UnderlyingBlock::Clear() {
// @@protoc_insertion_point(message_clear_start:UnderlyingBlock)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_data();
  _internal_metadata_.Clear();
}

bool UnderlyingBlock::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UnderlyingBlock)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .CompressedBlock block = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_block()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .UncompressedBlock raw = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_raw()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UnderlyingBlock)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UnderlyingBlock)
  return false;
#undef DO_
}

void UnderlyingBlock::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UnderlyingBlock)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .CompressedBlock block = 1;
  if (has_block()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_block(), output);
  }

  // .UncompressedBlock raw = 10;
  if (has_raw()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_raw(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:UnderlyingBlock)
}

::google::protobuf::uint8* UnderlyingBlock::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UnderlyingBlock)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .CompressedBlock block = 1;
  if (has_block()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_block(), deterministic, target);
  }

  // .UncompressedBlock raw = 10;
  if (has_raw()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_raw(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnderlyingBlock)
  return target;
}

size_t UnderlyingBlock::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UnderlyingBlock)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (data_case()) {
    // .UncompressedBlock raw = 10;
    case kRaw: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *data_.raw_);
      break;
    }
    // .CompressedBlock block = 1;
    case kBlock: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *data_.block_);
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UnderlyingBlock::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnderlyingBlock)
  GOOGLE_DCHECK_NE(&from, this);
  const UnderlyingBlock* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UnderlyingBlock>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnderlyingBlock)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnderlyingBlock)
    MergeFrom(*source);
  }
}

void UnderlyingBlock::MergeFrom(const UnderlyingBlock& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnderlyingBlock)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.data_case()) {
    case kRaw: {
      mutable_raw()->::UncompressedBlock::MergeFrom(from.raw());
      break;
    }
    case kBlock: {
      mutable_block()->::CompressedBlock::MergeFrom(from.block());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
}

void UnderlyingBlock::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnderlyingBlock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnderlyingBlock::CopyFrom(const UnderlyingBlock& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnderlyingBlock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnderlyingBlock::IsInitialized() const {
  return true;
}

void UnderlyingBlock::Swap(UnderlyingBlock* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnderlyingBlock::InternalSwap(UnderlyingBlock* other) {
  using std::swap;
  swap(data_, other->data_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UnderlyingBlock::GetMetadata() const {
  protobuf_deflateinfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_deflateinfo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DEFLATEBlock::InitAsDefaultInstance() {
  ::_DEFLATEBlock_default_instance_._instance.get_mutable()->data_ = const_cast< ::UnderlyingBlock*>(
      ::UnderlyingBlock::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DEFLATEBlock::kFinalFieldNumber;
const int DEFLATEBlock::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DEFLATEBlock::DEFLATEBlock()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_deflateinfo_2eproto::scc_info_DEFLATEBlock.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:DEFLATEBlock)
}
DEFLATEBlock::DEFLATEBlock(const DEFLATEBlock& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data()) {
    data_ = new ::UnderlyingBlock(*from.data_);
  } else {
    data_ = NULL;
  }
  final_ = from.final_;
  // @@protoc_insertion_point(copy_constructor:DEFLATEBlock)
}

void DEFLATEBlock::SharedCtor() {
  ::memset(&data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&final_) -
      reinterpret_cast<char*>(&data_)) + sizeof(final_));
}

DEFLATEBlock::~DEFLATEBlock() {
  // @@protoc_insertion_point(destructor:DEFLATEBlock)
  SharedDtor();
}

void DEFLATEBlock::SharedDtor() {
  if (this != internal_default_instance()) delete data_;
}

void DEFLATEBlock::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DEFLATEBlock::descriptor() {
  ::protobuf_deflateinfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_deflateinfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DEFLATEBlock& DEFLATEBlock::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_deflateinfo_2eproto::scc_info_DEFLATEBlock.base);
  return *internal_default_instance();
}


void DEFLATEBlock::Clear() {
// @@protoc_insertion_point(message_clear_start:DEFLATEBlock)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
  final_ = false;
  _internal_metadata_.Clear();
}

bool DEFLATEBlock::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DEFLATEBlock)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool final = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &final_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .UnderlyingBlock data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DEFLATEBlock)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DEFLATEBlock)
  return false;
#undef DO_
}

void DEFLATEBlock::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DEFLATEBlock)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool final = 1;
  if (this->final() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->final(), output);
  }

  // .UnderlyingBlock data = 2;
  if (this->has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DEFLATEBlock)
}

::google::protobuf::uint8* DEFLATEBlock::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DEFLATEBlock)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool final = 1;
  if (this->final() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->final(), target);
  }

  // .UnderlyingBlock data = 2;
  if (this->has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_data(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DEFLATEBlock)
  return target;
}

size_t DEFLATEBlock::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DEFLATEBlock)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .UnderlyingBlock data = 2;
  if (this->has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *data_);
  }

  // bool final = 1;
  if (this->final() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DEFLATEBlock::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DEFLATEBlock)
  GOOGLE_DCHECK_NE(&from, this);
  const DEFLATEBlock* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DEFLATEBlock>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DEFLATEBlock)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DEFLATEBlock)
    MergeFrom(*source);
  }
}

void DEFLATEBlock::MergeFrom(const DEFLATEBlock& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DEFLATEBlock)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_data()) {
    mutable_data()->::UnderlyingBlock::MergeFrom(from.data());
  }
  if (from.final() != 0) {
    set_final(from.final());
  }
}

void DEFLATEBlock::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DEFLATEBlock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DEFLATEBlock::CopyFrom(const DEFLATEBlock& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DEFLATEBlock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DEFLATEBlock::IsInitialized() const {
  return true;
}

void DEFLATEBlock::Swap(DEFLATEBlock* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DEFLATEBlock::InternalSwap(DEFLATEBlock* other) {
  using std::swap;
  swap(data_, other->data_);
  swap(final_, other->final_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DEFLATEBlock::GetMetadata() const {
  protobuf_deflateinfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_deflateinfo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DEFLATEStream::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DEFLATEStream::kBlocksFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DEFLATEStream::DEFLATEStream()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_deflateinfo_2eproto::scc_info_DEFLATEStream.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:DEFLATEStream)
}
DEFLATEStream::DEFLATEStream(const DEFLATEStream& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      blocks_(from.blocks_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:DEFLATEStream)
}

void DEFLATEStream::SharedCtor() {
}

DEFLATEStream::~DEFLATEStream() {
  // @@protoc_insertion_point(destructor:DEFLATEStream)
  SharedDtor();
}

void DEFLATEStream::SharedDtor() {
}

void DEFLATEStream::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DEFLATEStream::descriptor() {
  ::protobuf_deflateinfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_deflateinfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DEFLATEStream& DEFLATEStream::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_deflateinfo_2eproto::scc_info_DEFLATEStream.base);
  return *internal_default_instance();
}


void DEFLATEStream::Clear() {
// @@protoc_insertion_point(message_clear_start:DEFLATEStream)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  blocks_.Clear();
  _internal_metadata_.Clear();
}

bool DEFLATEStream::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DEFLATEStream)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .DEFLATEBlock blocks = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_blocks()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DEFLATEStream)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DEFLATEStream)
  return false;
#undef DO_
}

void DEFLATEStream::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DEFLATEStream)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .DEFLATEBlock blocks = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->blocks_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->blocks(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DEFLATEStream)
}

::google::protobuf::uint8* DEFLATEStream::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DEFLATEStream)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .DEFLATEBlock blocks = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->blocks_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->blocks(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DEFLATEStream)
  return target;
}

size_t DEFLATEStream::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DEFLATEStream)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .DEFLATEBlock blocks = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->blocks_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->blocks(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DEFLATEStream::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DEFLATEStream)
  GOOGLE_DCHECK_NE(&from, this);
  const DEFLATEStream* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DEFLATEStream>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DEFLATEStream)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DEFLATEStream)
    MergeFrom(*source);
  }
}

void DEFLATEStream::MergeFrom(const DEFLATEStream& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DEFLATEStream)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  blocks_.MergeFrom(from.blocks_);
}

void DEFLATEStream::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DEFLATEStream)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DEFLATEStream::CopyFrom(const DEFLATEStream& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DEFLATEStream)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DEFLATEStream::IsInitialized() const {
  return true;
}

void DEFLATEStream::Swap(DEFLATEStream* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DEFLATEStream::InternalSwap(DEFLATEStream* other) {
  using std::swap;
  CastToBase(&blocks_)->InternalSwap(CastToBase(&other->blocks_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DEFLATEStream::GetMetadata() const {
  protobuf_deflateinfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_deflateinfo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Literal* Arena::CreateMaybeMessage< ::Literal >(Arena* arena) {
  return Arena::CreateInternal< ::Literal >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Backref* Arena::CreateMaybeMessage< ::Backref >(Arena* arena) {
  return Arena::CreateInternal< ::Backref >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::OffsetBackref* Arena::CreateMaybeMessage< ::OffsetBackref >(Arena* arena) {
  return Arena::CreateInternal< ::OffsetBackref >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::DeflateSym* Arena::CreateMaybeMessage< ::DeflateSym >(Arena* arena) {
  return Arena::CreateInternal< ::DeflateSym >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::UncompressedBlock* Arena::CreateMaybeMessage< ::UncompressedBlock >(Arena* arena) {
  return Arena::CreateInternal< ::UncompressedBlock >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CompressedBlock_LenlitCodelenEntry_DoNotUse* Arena::CreateMaybeMessage< ::CompressedBlock_LenlitCodelenEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::CompressedBlock_LenlitCodelenEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CompressedBlock_DistCodelenEntry_DoNotUse* Arena::CreateMaybeMessage< ::CompressedBlock_DistCodelenEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::CompressedBlock_DistCodelenEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CompressedBlock* Arena::CreateMaybeMessage< ::CompressedBlock >(Arena* arena) {
  return Arena::CreateInternal< ::CompressedBlock >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::UnderlyingBlock* Arena::CreateMaybeMessage< ::UnderlyingBlock >(Arena* arena) {
  return Arena::CreateInternal< ::UnderlyingBlock >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::DEFLATEBlock* Arena::CreateMaybeMessage< ::DEFLATEBlock >(Arena* arena) {
  return Arena::CreateInternal< ::DEFLATEBlock >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::DEFLATEStream* Arena::CreateMaybeMessage< ::DEFLATEStream >(Arena* arena) {
  return Arena::CreateInternal< ::DEFLATEStream >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
