syntax = "proto3";

package DEFLATEProto;

message Literal {
    uint32 value = 1;
}

message Backref {
    uint32 length = 1;
    uint32 distance = 2;
}

message OffsetBackref {
    uint32 offset = 1;
    uint32 length = 2;
    uint32 distance = 3;
}

message DeflateSym {
    oneof sym {
        Literal lit = 1;
        Backref backref = 2;
        OffsetBackref offset = 3;
    }
}

message UncompressedBlock {
    bytes data = 1;
}

// Ideally we would like to store codes directly, but storing variable-length
// bitvectors in map values is hard. Instead, store the length of the code and
// use the canonical encoding algorithms to reconstruct the actual codes.
message CompressedBlock {
    map<uint32, uint32> lenlit_codelen = 3;
    map<uint32, uint32> dist_codelen = 4;
    repeated DeflateSym data = 1;
}

message UnderlyingBlock {
    oneof data {
        UncompressedBlock raw = 10;
        CompressedBlock block = 1;
    }
}

message DEFLATEBlock {
    bool bfinal = 1;
    UnderlyingBlock data = 2;
}

message DEFLATEStream {
    repeated DEFLATEBlock blocks = 1;
}